<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的
例如namespace="me.gacl.mapping.userMapper"就是me.gacl.mapping(包名)+userMapper(userMapper.xml文件去除后缀)
 -->
<mapper namespace="io.github.no5972.springmvc1.ManagerMapping">
    <!-- 在select标签中编写查询的SQL语句， 设置select标签的id属性为getUser，id属性值必须是唯一的，不能够重复
    使用parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型
    resultType="me.gacl.domain.User"就表示将查询结果封装成一个User类的对象返回
    User类就是users表所对应的实体类
    -->
    <!-- 
        根据id查询得到一个user对象
     -->
    <insert id="addManager" parameterType="io.github.no5972.springmvc1.Manager">
    	insert into manager(account, name, password, number) values (#{account}, #{name}, #{password}, #{number})
    </insert>
    <delete id="removeManager" parameterType="int">
    	delete from manager where id=#{id}
    </delete>
    <select id="printManager" resultType="io.github.no5972.springmvc1.Manager">
    	select * from manager
    </select>
    <select id="editOneManager"  resultType="io.github.no5972.springmvc1.Manager">
    	select * from manager where id=#{id}
    </select>
    <update id="updateManager" parameterType="io.github.no5972.springmvc1.Manager">
    	update manager set name=#{name}, password=#{password} where id=#{id}
    </update>
</mapper>